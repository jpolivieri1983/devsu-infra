name: Cluster Deployment

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'stack name'
        required: true
        default: "Devsu"
      environment:
        description: 'dev/qa/prod'
        required: true
        default: "dev"
      subnetA:          
        description: 'Subnet A'
        default: subnet-012c74a4e9c757fd6  
        required: true             
      subnetB:                                        
        description: 'Subnet B'
        default: subnet-0887fb6f182e25c28 
        required: true   
      vpc:
        description: 'VPC to deploy'
        required: true
        default: 'vpc-0ea1e66cfa389c638'
      myVPCCidrBlock:
        description: 'cidr block used on vpc'
        required: true
        default: '172.28.218.0/25'      # to be defined

env:
  AWS_REGION: us-east-1   

jobs:
  cloudformation:
    name: Deploy stack to AWS
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read    
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Download Docker image
      run: |
        docker pull jolivieridocker/devsu:latest

    - name: Configure AWS credentials
      id: creds
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Deploy cloudformation STACK
      id: ecs-cluster
      uses: aws-actions/aws-cloudformation-github-deploy@master
      with:
        name: ${{ github.event.inputs.name }}-${{ github.event.inputs.environment }}
        template: ./main-devsu.yml
        no-fail-on-empty-changeset: "1"
        parameter-overrides: >-
          myVPC=${{ github.event.inputs.vpc }},
          subnetA=${{ github.event.inputs.subnetA }},
          subnetB=${{ github.event.inputs.subnetB }},
          ambiente=${{ github.event.inputs.environment }},
          myVPCCidrBlock=${{ github.event.inputs.myVPCCidrBlock }}
        capabilities: "CAPABILITY_NAMED_IAM"